{"remainingRequest":"/home/pi/homer/node_modules/thread-loader/dist/cjs.js!/home/pi/homer/node_modules/babel-loader/lib/index.js!/home/pi/homer/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/pi/homer/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pi/homer/src/components/services/OpenWeather.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/pi/homer/src/components/services/OpenWeather.vue","mtime":1654015932568},{"path":"/home/pi/homer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/pi/homer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3BpL2hvbWVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvbi5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiT3BlbldlYXRoZXIiLAogIHByb3BzOiB7CiAgICBpdGVtOiBPYmplY3QKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpZDogbnVsbCwKICAgICAgaWNvbjogbnVsbCwKICAgICAgbmFtZTogbnVsbCwKICAgICAgdGVtcDogbnVsbCwKICAgICAgY29uZGl0aW9uczogbnVsbCwKICAgICAgZXJyb3I6IGZhbHNlCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZmV0Y2hXZWF0aGVyKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBmZXRjaFdlYXRoZXI6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9mZXRjaFdlYXRoZXIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgICAgdmFyIGxvY2F0aW9uUXVlcnksIGFwaUtleSwgdXJsOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIC8vIFVzZSBsb2NhdGlvbiBJRCBpZiBzcGVjaWZpZWQsIG90aGVyd2lzZSByZXRyaWV2ZSB2YWx1ZSBmcm9tIGxvY2F0aW9uIChuYW1lKS4KICAgICAgICAgICAgICAgIGlmICh0aGlzLml0ZW0ubG9jYXRpb25JZCkgewogICAgICAgICAgICAgICAgICBsb2NhdGlvblF1ZXJ5ID0gImlkPSIuY29uY2F0KHRoaXMuaXRlbS5sb2NhdGlvbklkKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIGxvY2F0aW9uUXVlcnkgPSAicT0iLmNvbmNhdCh0aGlzLml0ZW0ubG9jYXRpb24pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGFwaUtleSA9IHRoaXMuaXRlbS5hcGlrZXkgfHwgdGhpcy5pdGVtLmFwaUtleTsKICAgICAgICAgICAgICAgIHVybCA9ICJodHRwczovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvd2VhdGhlcj8iLmNvbmNhdChsb2NhdGlvblF1ZXJ5LCAiJmFwcGlkPSIpLmNvbmNhdChhcGlLZXksICImdW5pdHM9IikuY29uY2F0KHRoaXMuaXRlbS51bml0cyk7CiAgICAgICAgICAgICAgICBmZXRjaCh1cmwpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHsKICAgICAgICAgICAgICAgICAgICB0aHJvdyBFcnJvcihyZXNwb25zZS5zdGF0dXNUZXh0KTsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKICAgICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHdlYXRoZXIpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMuaWQgPSB3ZWF0aGVyLmlkOwogICAgICAgICAgICAgICAgICBfdGhpcy5uYW1lID0gd2VhdGhlci5uYW1lOwogICAgICAgICAgICAgICAgICBfdGhpcy50ZW1wID0gcGFyc2VJbnQod2VhdGhlci5tYWluLnRlbXApLnRvRml4ZWQoMSk7CiAgICAgICAgICAgICAgICAgIF90aGlzLmljb24gPSB3ZWF0aGVyLndlYXRoZXJbMF0uaWNvbjsKICAgICAgICAgICAgICAgICAgX3RoaXMuY29uZGl0aW9ucyA9IHdlYXRoZXIud2VhdGhlclswXS5kZXNjcmlwdGlvbjsKICAgICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgICAgICAgICAgICBfdGhpcy5lcnJvciA9IHRydWU7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGZldGNoV2VhdGhlcigpIHsKICAgICAgICByZXR1cm4gX2ZldGNoV2VhdGhlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZmV0Y2hXZWF0aGVyOwogICAgfSgpCiAgfSwKICBmaWx0ZXJzOiB7CiAgICB0ZW1wU3VmZml4OiBmdW5jdGlvbiB0ZW1wU3VmZml4KHZhbHVlLCB0eXBlKSB7CiAgICAgIGlmICghdmFsdWUpIHJldHVybiAiIjsKICAgICAgdmFyIHVuaXQgPSAiSyI7CgogICAgICBpZiAodHlwZSA9PT0gIm1ldHJpYyIpIHsKICAgICAgICB1bml0ID0gIsKwQyI7CiAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gImltcGVyaWFsIikgewogICAgICAgIHVuaXQgPSAiwrBGIjsKICAgICAgfQoKICAgICAgcmV0dXJuICIiLmNvbmNhdCh2YWx1ZSwgIiAiKS5jb25jYXQodW5pdCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["OpenWeather.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AADA,GAFA;AAKA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,EAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA,IAFA;AAGA,MAAA,IAAA,EAAA,IAHA;AAIA,MAAA,IAAA,EAAA,IAJA;AAKA,MAAA,UAAA,EAAA,IALA;AAMA,MAAA,KAAA,EAAA;AANA,KAAA;AAAA,GALA;AAaA,EAAA,OAbA,qBAaA;AACA,SAAA,YAAA;AACA,GAfA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,YAAA;AAAA,kFAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA,oBAAA,KAAA,IAAA,CAAA,UAAA,EAAA;AACA,kBAAA,aAAA,gBAAA,KAAA,IAAA,CAAA,UAAA,CAAA;AACA,iBAFA,MAEA;AACA,kBAAA,aAAA,eAAA,KAAA,IAAA,CAAA,QAAA,CAAA;AACA;;AAEA,gBAAA,MAVA,GAUA,KAAA,IAAA,CAAA,MAAA,IAAA,KAAA,IAAA,CAAA,MAVA;AAWA,gBAAA,GAXA,6DAWA,aAXA,oBAWA,MAXA,oBAWA,KAAA,IAAA,CAAA,KAXA;AAYA,gBAAA,KAAA,CAAA,GAAA,CAAA,CACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,sBAAA,CAAA,QAAA,CAAA,EAAA,EAAA;AACA,0BAAA,KAAA,CAAA,QAAA,CAAA,UAAA,CAAA;AACA;;AACA,yBAAA,QAAA,CAAA,IAAA,EAAA;AACA,iBANA,EAOA,IAPA,CAOA,UAAA,OAAA,EAAA;AACA,kBAAA,KAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA;AACA,kBAAA,KAAA,CAAA,IAAA,GAAA,OAAA,CAAA,IAAA;AACA,kBAAA,KAAA,CAAA,IAAA,GAAA,QAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA,kBAAA,KAAA,CAAA,IAAA,GAAA,OAAA,CAAA,OAAA,CAAA,CAAA,EAAA,IAAA;AACA,kBAAA,KAAA,CAAA,UAAA,GAAA,OAAA,CAAA,OAAA,CAAA,CAAA,EAAA,WAAA;AACA,iBAbA,EAcA,KAdA,CAcA,UAAA,CAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,kBAAA,KAAA,CAAA,KAAA,GAAA,IAAA;AACA,iBAjBA;;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADA,GAhBA;AAiDA,EAAA,OAAA,EAAA;AACA,IAAA,UAAA,EAAA,oBAAA,KAAA,EAAA,IAAA,EAAA;AACA,UAAA,CAAA,KAAA,EAAA,OAAA,EAAA;AAEA,UAAA,IAAA,GAAA,GAAA;;AACA,UAAA,IAAA,KAAA,QAAA,EAAA;AACA,QAAA,IAAA,GAAA,IAAA;AACA,OAFA,MAEA,IAAA,IAAA,KAAA,UAAA,EAAA;AACA,QAAA,IAAA,GAAA,IAAA;AACA;;AACA,uBAAA,KAAA,cAAA,IAAA;AACA;AAXA;AAjDA,CAAA","sourcesContent":["<template>\n  <div>\n    <div class=\"card\" :class=\"item.class\">\n      <a\n        :href=\"`https://openweathermap.org/city/${id}`\"\n        :target=\"item.target\"\n        rel=\"noreferrer\"\n      >\n        <div class=\"card-content\">\n          <div class=\"media\">\n            <div v-if=\"icon\" class=\"media-left\" :class=\"item.background\">\n              <figure class=\"image is-48x48\">\n                <img\n                  :src=\"`https://openweathermap.org/img/wn/${icon}@2x.png`\"\n                  :alt=\"conditions\"\n                  :title=\"conditions\"\n                />\n              </figure>\n            </div>\n            <div class=\"media-content\">\n              <p v-if=\"error\" class=\"error\">Data could not be retrieved</p>\n              <div v-else>\n                <p class=\"title is-4\">{{ name }}</p>\n                <p class=\"subtitle is-6\">\n                  {{ temp | tempSuffix(this.item.units) }}\n                </p>\n              </div>\n            </div>\n          </div>\n          <div class=\"tag\" :class=\"item.tagstyle\" v-if=\"item.tag\">\n            <strong class=\"tag-text\">#{{ item.tag }}</strong>\n          </div>\n        </div>\n      </a>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"OpenWeather\",\n  props: {\n    item: Object,\n  },\n  data: () => ({\n    id: null,\n    icon: null,\n    name: null,\n    temp: null,\n    conditions: null,\n    error: false,\n  }),\n  created() {\n    this.fetchWeather();\n  },\n  methods: {\n    fetchWeather: async function () {\n      let locationQuery;\n\n      // Use location ID if specified, otherwise retrieve value from location (name).\n      if (this.item.locationId) {\n        locationQuery = `id=${this.item.locationId}`;\n      } else {\n        locationQuery = `q=${this.item.location}`;\n      }\n\n      const apiKey = this.item.apikey || this.item.apiKey;\n      const url = `https://api.openweathermap.org/data/2.5/weather?${locationQuery}&appid=${apiKey}&units=${this.item.units}`;\n      fetch(url)\n        .then((response) => {\n          if (!response.ok) {\n            throw Error(response.statusText);\n          }\n          return response.json();\n        })\n        .then((weather) => {\n          this.id = weather.id;\n          this.name = weather.name;\n          this.temp = parseInt(weather.main.temp).toFixed(1);\n          this.icon = weather.weather[0].icon;\n          this.conditions = weather.weather[0].description;\n        })\n        .catch((e) => {\n          console.log(e);\n          this.error = true;\n        });\n    },\n  },\n  filters: {\n    tempSuffix: function (value, type) {\n      if (!value) return \"\";\n\n      let unit = \"K\";\n      if (type === \"metric\") {\n        unit = \"°C\";\n      } else if (type === \"imperial\") {\n        unit = \"°F\";\n      }\n      return `${value} ${unit}`;\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n// Add a border around the weather image.\n// Otherwise the image is not always distinguishable.\n.media-left {\n  &.circle,\n  &.square {\n    background-color: #e4e4e4;\n  }\n\n  &.circle {\n    border-radius: 90%;\n  }\n\n  img {\n    max-height: 100%;\n  }\n}\n\n.error {\n  color: #de0000;\n}\n\n// Change background color in dark mode.\n.is-dark {\n  .media-left {\n    &.circle,\n    &.square {\n      background-color: #909090;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/components/services"}]}