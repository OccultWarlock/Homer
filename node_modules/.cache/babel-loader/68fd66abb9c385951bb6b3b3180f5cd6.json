{"remainingRequest":"/home/pi/homer/node_modules/thread-loader/dist/cjs.js!/home/pi/homer/node_modules/babel-loader/lib/index.js!/home/pi/homer/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/pi/homer/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pi/homer/src/components/services/Medusa.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/pi/homer/src/components/services/Medusa.vue","mtime":1654015932568},{"path":"/home/pi/homer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/pi/homer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHNlcnZpY2UgZnJvbSAiQC9taXhpbnMvc2VydmljZS5qcyI7CmltcG9ydCBHZW5lcmljIGZyb20gIi4vR2VuZXJpYy52dWUiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIk1lZHVzYSIsCiAgbWl4aW5zOiBbc2VydmljZV0sCiAgcHJvcHM6IHsKICAgIGl0ZW06IE9iamVjdAogIH0sCiAgY29tcG9uZW50czogewogICAgR2VuZXJpYzogR2VuZXJpYwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbmZpZzogbnVsbCwKICAgICAgc2VydmVyRXJyb3I6IGZhbHNlCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZmV0Y2hDb25maWcoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZldGNoQ29uZmlnOiBmdW5jdGlvbiBmZXRjaENvbmZpZygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuZmV0Y2goIi9hcGkvdjIvY29uZmlnIiwgewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICJYLUFwaS1LZXkiOiB0aGlzLml0ZW0uYXBpa2V5CiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChjb25mKSB7CiAgICAgICAgX3RoaXMuY29uZmlnID0gY29uZjsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICBfdGhpcy5zZXJ2ZXJFcnJvciA9IHRydWU7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Medusa.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAA,OAAA,MAAA,qBAAA;AACA,OAAA,OAAA,MAAA,eAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,MAAA,EAAA,CAAA,OAAA,CAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AADA,GAHA;AAMA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GANA;AASA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,IADA;AAEA,MAAA,WAAA,EAAA;AAFA,KAAA;AAIA,GAdA;AAeA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,WAAA;AACA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,WAAA,EAAA,uBAAA;AAAA;;AACA,WAAA,KAAA,CAAA,gBAAA,EAAA;AACA,QAAA,OAAA,EAAA;AAAA,uBAAA,KAAA,IAAA,CAAA;AAAA;AADA,OAAA,EAGA,IAHA,CAGA,UAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,IAAA;AACA,OALA,EAMA,KANA,CAMA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,IAAA;AACA,OATA;AAUA;AAZA;AAlBA,CAAA","sourcesContent":["<template>\n  <Generic :item=\"item\">\n    <template #indicator>\n      <div class=\"notifs\">\n        <strong\n          v-if=\"config !== null && config.system.news.unread > 0\"\n          class=\"notif news\"\n          title=\"News\"\n          >{{ config.system.news.unread }}</strong\n        >\n        <strong\n          v-if=\"config !== null && config.main.logs.numWarnings > 0\"\n          class=\"notif warnings\"\n          title=\"Warning\"\n          >{{ config.main.logs.numWarnings }}</strong\n        >\n        <strong\n          v-if=\"config !== null && config.main.logs.numErrors > 0\"\n          class=\"notif errors\"\n          title=\"Error\"\n          >{{ config.main.logs.numErrors }}</strong\n        >\n        <strong\n          v-if=\"serverError\"\n          class=\"notif errors\"\n          title=\"Connection error to Medusa API, check url and apikey in config.yml\"\n          >?</strong\n        >\n      </div>\n    </template>\n  </Generic>\n</template>\n\n<script>\nimport service from \"@/mixins/service.js\";\nimport Generic from \"./Generic.vue\";\n\nexport default {\n  name: \"Medusa\",\n  mixins: [service],\n  props: {\n    item: Object,\n  },\n  components: {\n    Generic,\n  },\n  data: () => {\n    return {\n      config: null,\n      serverError: false,\n    };\n  },\n  created: function () {\n    this.fetchConfig();\n  },\n  methods: {\n    fetchConfig: function () {\n      this.fetch(\"/api/v2/config\", {\n        headers: { \"X-Api-Key\": this.item.apikey },\n      })\n        .then((conf) => {\n          this.config = conf;\n        })\n        .catch((e) => {\n          console.log(e);\n          this.serverError = true;\n        });\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.notifs {\n  position: absolute;\n  color: white;\n  font-family: sans-serif;\n  top: 0.3em;\n  right: 0.5em;\n  .notif {\n    padding-right: 0.35em;\n    padding-left: 0.35em;\n    padding-top: 0.2em;\n    padding-bottom: 0.2em;\n    border-radius: 0.25em;\n    position: relative;\n    margin-left: 0.3em;\n    font-size: 0.8em;\n    &.news {\n      background-color: #777777;\n    }\n\n    &.warnings {\n      background-color: #d08d2e;\n    }\n\n    &.errors {\n      background-color: #e51111;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/components/services"}]}