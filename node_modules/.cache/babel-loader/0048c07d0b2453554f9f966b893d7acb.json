{"remainingRequest":"/home/pi/homer/node_modules/thread-loader/dist/cjs.js!/home/pi/homer/node_modules/babel-loader/lib/index.js!/home/pi/homer/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/pi/homer/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pi/homer/src/components/Message.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/pi/homer/src/components/Message.vue","mtime":1654015932568},{"path":"/home/pi/homer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/pi/homer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvcGkvaG9tZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvcGkvaG9tZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIk1lc3NhZ2UiLAogIHByb3BzOiB7CiAgICBpdGVtOiBPYmplY3QKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtZXNzYWdlOiB7fQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfY3JlYXRlZCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIC8vIExvb2sgZm9yIGEgbmV3IG1lc3NhZ2UgaWYgYW4gZW5kcG9pbnQgaXMgcHJvdmlkZWQuCiAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5pdGVtKTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRNZXNzYWdlKCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgfSkpOwoKICAgIGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICAgIHJldHVybiBfY3JlYXRlZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBjcmVhdGVkOwogIH0oKSwKICBjb21wdXRlZDogewogICAgc2hvdzogZnVuY3Rpb24gc2hvdygpIHsKICAgICAgcmV0dXJuIHRoaXMubWVzc2FnZS50aXRsZSB8fCB0aGlzLm1lc3NhZ2UuY29udGVudDsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBpdGVtOiBmdW5jdGlvbiBpdGVtKF9pdGVtKSB7CiAgICAgIHRoaXMubWVzc2FnZSA9IE9iamVjdC5hc3NpZ24oe30sIF9pdGVtKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldE1lc3NhZ2U6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9nZXRNZXNzYWdlID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgZmV0Y2hlZE1lc3NhZ2UsIG1lc3NhZ2UsIF9pLCBfYXJyLCBwcm9wOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWYgKHRoaXMuaXRlbSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgaWYgKCF0aGlzLml0ZW0udXJsKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmRvd25sb2FkTWVzc2FnZSh0aGlzLml0ZW0udXJsKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgZmV0Y2hlZE1lc3NhZ2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJkb25lIik7CgogICAgICAgICAgICAgICAgaWYgKHRoaXMuaXRlbS5tYXBwaW5nKSB7CiAgICAgICAgICAgICAgICAgIGZldGNoZWRNZXNzYWdlID0gdGhpcy5tYXBSZW1vdGVNZXNzYWdlKGZldGNoZWRNZXNzYWdlKTsKICAgICAgICAgICAgICAgIH0gLy8ga2VlcCB0aGUgb3JpZ2luYWwgY29uZmlnIHZhbHVlIGlmIG5vIHZhbHVlIGlzIHByb3ZpZGVkIGJ5IHRoZSBlbmRwb2ludAoKCiAgICAgICAgICAgICAgICBtZXNzYWdlID0gdGhpcy5tZXNzYWdlOwoKICAgICAgICAgICAgICAgIGZvciAoX2kgPSAwLCBfYXJyID0gWyJ0aXRsZSIsICJzdHlsZSIsICJjb250ZW50IiwgImljb24iXTsgX2kgPCBfYXJyLmxlbmd0aDsgX2krKykgewogICAgICAgICAgICAgICAgICBwcm9wID0gX2FycltfaV07CgogICAgICAgICAgICAgICAgICBpZiAocHJvcCBpbiBmZXRjaGVkTWVzc2FnZSAmJiBmZXRjaGVkTWVzc2FnZVtwcm9wXSAhPT0gbnVsbCkgewogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VbcHJvcF0gPSBmZXRjaGVkTWVzc2FnZVtwcm9wXTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHRoaXMubWVzc2FnZSA9IF9vYmplY3RTcHJlYWQoe30sIG1lc3NhZ2UpOyAvLyBGb3JjZSBjb21wdXRlZCBwcm9wZXJ0eSB0byByZS1ldmFsdWF0ZQoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgaWYgKHRoaXMuaXRlbS5yZWZyZXNoSW50ZXJ2YWwpIHsKICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCh0aGlzLmdldE1lc3NhZ2UsIHRoaXMuaXRlbS5yZWZyZXNoSW50ZXJ2YWwpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZ2V0TWVzc2FnZSgpIHsKICAgICAgICByZXR1cm4gX2dldE1lc3NhZ2UuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldE1lc3NhZ2U7CiAgICB9KCksCiAgICBkb3dubG9hZE1lc3NhZ2U6IGZ1bmN0aW9uIGRvd25sb2FkTWVzc2FnZSh1cmwpIHsKICAgICAgcmV0dXJuIGZldGNoKHVybCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzICE9IDIwMCkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKICAgICAgfSk7CiAgICB9LAogICAgbWFwUmVtb3RlTWVzc2FnZTogZnVuY3Rpb24gbWFwUmVtb3RlTWVzc2FnZShtZXNzYWdlKSB7CiAgICAgIHZhciBtYXBwZWQgPSB7fTsgLy8gbWFwIHByb3BlcnR5IGZyb20gbWVzc2FnZSBpbnRvIG1hcHBlZCBhY2NvcmRpbmcgdG8gbWFwcGluZyBjb25maWcgKG9ubHkgaWYgZmllbGQgaGFzIGEgdmFsdWUpOgoKICAgICAgZm9yICh2YXIgcHJvcCBpbiB0aGlzLml0ZW0ubWFwcGluZykgewogICAgICAgIGlmIChtZXNzYWdlW3RoaXMuaXRlbS5tYXBwaW5nW3Byb3BdXSkgbWFwcGVkW3Byb3BdID0gbWVzc2FnZVt0aGlzLml0ZW0ubWFwcGluZ1twcm9wXV07CiAgICAgIH0KCiAgICAgIHJldHVybiBtYXBwZWQ7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Message.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <article v-if=\"show\" class=\"message\" :class=\"message.style\">\n    <div v-if=\"message.title || message.icon\" class=\"message-header\">\n      <p>\n        <i v-if=\"message.icon\" :class=\"`fa-fw ${message.icon}`\"></i>\n        {{ message.title }}\n      </p>\n    </div>\n    <div\n      v-if=\"message.content\"\n      class=\"message-body\"\n      v-html=\"message.content\"\n    ></div>\n  </article>\n</template>\n\n<script>\nexport default {\n  name: \"Message\",\n  props: {\n    item: Object,\n  },\n  data: function () {\n    return {\n      message: {},\n    };\n  },\n  created: async function () {\n    // Look for a new message if an endpoint is provided.\n    this.message = Object.assign({}, this.item);\n    await this.getMessage();\n  },\n  computed: {\n    show: function () {\n      return this.message.title || this.message.content;\n    },\n  },\n  watch: {\n    item: function (item) {\n      this.message = Object.assign({}, item);\n    },\n  },\n  methods: {\n    getMessage: async function () {\n      if (!this.item) {\n        return;\n      }\n      if (this.item.url) {\n        let fetchedMessage = await this.downloadMessage(this.item.url);\n        console.log(\"done\");\n        if (this.item.mapping) {\n          fetchedMessage = this.mapRemoteMessage(fetchedMessage);\n        }\n\n        // keep the original config value if no value is provided by the endpoint\n        const message = this.message;\n        for (const prop of [\"title\", \"style\", \"content\", \"icon\"]) {\n          if (prop in fetchedMessage && fetchedMessage[prop] !== null) {\n            message[prop] = fetchedMessage[prop];\n          }\n        }\n        this.message = { ...message }; // Force computed property to re-evaluate\n      }\n\n      if (this.item.refreshInterval) {\n        setTimeout(this.getMessage, this.item.refreshInterval);\n      }\n    },\n\n    downloadMessage: function (url) {\n      return fetch(url).then(function (response) {\n        if (response.status != 200) {\n          return;\n        }\n        return response.json();\n      });\n    },\n\n    mapRemoteMessage: function (message) {\n      let mapped = {};\n      // map property from message into mapped according to mapping config (only if field has a value):\n      for (const prop in this.item.mapping)\n        if (message[this.item.mapping[prop]])\n          mapped[prop] = message[this.item.mapping[prop]];\n      return mapped;\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/components"}]}