{"remainingRequest":"/home/pi/homer/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pi/homer/src/components/services/Emby.vue?vue&type=style&index=0&id=6a5d3ff0&scoped=true&lang=scss&","dependencies":[{"path":"/home/pi/homer/src/components/services/Emby.vue","mtime":1654015932568},{"path":"/home/pi/homer/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zdGF0dXMgewogIGZvbnQtc2l6ZTogMC44cmVtOwogIGNvbG9yOiB2YXIoLS10ZXh0LXRpdGxlKTsKCiAgJi5ydW5uaW5nOmJlZm9yZSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTRlMTg1OwogICAgYm9yZGVyLWNvbG9yOiAjNzhkOTY1OwogICAgYm94LXNoYWRvdzogMCAwIDVweCAxcHggIzk0ZTE4NTsKICB9CgogICYuZGVhZDpiZWZvcmUgewogICAgYmFja2dyb3VuZC1jb2xvcjogI2M5NDA0ZDsKICAgIGJvcmRlci1jb2xvcjogI2M0MmMzYjsKICAgIGJveC1zaGFkb3c6IDAgMCA1cHggMXB4ICNjOTQwNGQ7CiAgfQoKICAmOmJlZm9yZSB7CiAgICBjb250ZW50OiAiICI7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICB3aWR0aDogN3B4OwogICAgaGVpZ2h0OiA3cHg7CiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjMDAwOwogICAgYm9yZGVyLXJhZGl1czogN3B4OwogIH0KfQo="},{"version":3,"sources":["Emby.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Emby.vue","sourceRoot":"src/components/services","sourcesContent":["<template>\n  <Generic :item=\"item\">\n    <template #content>\n      <p class=\"title is-4\">{{ item.name }}</p>\n      <p class=\"subtitle is-6\">\n        <template v-if=\"item.subtitle\">\n          {{ item.subtitle }}\n        </template>\n        <template v-else>\n          {{ embyCount }}\n        </template>\n      </p>\n    </template>\n    <template #indicator>\n      <div v-if=\"status\" class=\"status\" :class=\"status\">\n        {{ status }}\n      </div>\n    </template>\n  </Generic>\n</template>\n\n<script>\nimport service from \"@/mixins/service.js\";\nimport Generic from \"./Generic.vue\";\n\nexport default {\n  name: \"Emby\",\n  mixins: [service],\n  props: {\n    item: Object,\n  },\n  components: {\n    Generic,\n  },\n  data: () => ({\n    status: \"\",\n    albumCount: 0,\n    songCount: 0,\n    movieCount: 0,\n    seriesCount: 0,\n    episodeCount: 0,\n  }),\n  computed: {\n    embyCount: function () {\n      if (this.item.libraryType === \"music\")\n        return `${this.songCount} songs, ${this.albumCount} albums`;\n      else if (this.item.libraryType === \"movies\")\n        return `${this.movieCount} movies`;\n      else if (this.item.libraryType === \"series\")\n        return `${this.episodeCount} eps, ${this.seriesCount} series`;\n      else return `wrong library type ðŸ’€`;\n    },\n  },\n  created() {\n    this.fetchServerStatus();\n\n    if (!this.item.subtitle && this.status !== \"dead\")\n      this.fetchServerMediaStats();\n  },\n  methods: {\n    fetchServerStatus: async function () {\n      this.fetch(\"/System/info/public\")\n        .then((response) => {\n          if (response.Id) this.status = \"running\";\n          else throw new Error();\n        })\n        .catch((e) => {\n          console.log(e);\n          this.status = \"dead\";\n        });\n    },\n    fetchServerMediaStats: async function () {\n      const headers = {\n        \"X-Emby-Token\": this.item.apikey,\n      };\n\n      var data = await this.fetch(\"/items/counts\", { headers }).catch((e) => {\n        console.log(e);\n      });\n\n      this.albumCount = data.AlbumCount;\n      this.songCount = data.SongCount;\n      this.movieCount = data.MovieCount;\n      this.seriesCount = data.SeriesCount;\n      this.episodeCount = data.EpisodeCount;\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.status {\n  font-size: 0.8rem;\n  color: var(--text-title);\n\n  &.running:before {\n    background-color: #94e185;\n    border-color: #78d965;\n    box-shadow: 0 0 5px 1px #94e185;\n  }\n\n  &.dead:before {\n    background-color: #c9404d;\n    border-color: #c42c3b;\n    box-shadow: 0 0 5px 1px #c9404d;\n  }\n\n  &:before {\n    content: \" \";\n    display: inline-block;\n    width: 7px;\n    height: 7px;\n    margin-right: 10px;\n    border: 1px solid #000;\n    border-radius: 7px;\n  }\n}\n</style>\n"]}]}