{"remainingRequest":"/home/pi/homer/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pi/homer/src/components/services/Medusa.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/pi/homer/src/components/services/Medusa.vue","mtime":1654015932568},{"path":"/home/pi/homer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/pi/homer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBzZXJ2aWNlIGZyb20gIkAvbWl4aW5zL3NlcnZpY2UuanMiOwppbXBvcnQgR2VuZXJpYyBmcm9tICIuL0dlbmVyaWMudnVlIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiTWVkdXNhIiwKICBtaXhpbnM6IFtzZXJ2aWNlXSwKICBwcm9wczogewogICAgaXRlbTogT2JqZWN0LAogIH0sCiAgY29tcG9uZW50czogewogICAgR2VuZXJpYywKICB9LAogIGRhdGE6ICgpID0+IHsKICAgIHJldHVybiB7CiAgICAgIGNvbmZpZzogbnVsbCwKICAgICAgc2VydmVyRXJyb3I6IGZhbHNlLAogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIHRoaXMuZmV0Y2hDb25maWcoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZldGNoQ29uZmlnOiBmdW5jdGlvbiAoKSB7CiAgICAgIHRoaXMuZmV0Y2goIi9hcGkvdjIvY29uZmlnIiwgewogICAgICAgIGhlYWRlcnM6IHsgIlgtQXBpLUtleSI6IHRoaXMuaXRlbS5hcGlrZXkgfSwKICAgICAgfSkKICAgICAgICAudGhlbigoY29uZikgPT4gewogICAgICAgICAgdGhpcy5jb25maWcgPSBjb25mOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChlKSA9PiB7CiAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICAgIHRoaXMuc2VydmVyRXJyb3IgPSB0cnVlOwogICAgICAgIH0pOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["Medusa.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Medusa.vue","sourceRoot":"src/components/services","sourcesContent":["<template>\n  <Generic :item=\"item\">\n    <template #indicator>\n      <div class=\"notifs\">\n        <strong\n          v-if=\"config !== null && config.system.news.unread > 0\"\n          class=\"notif news\"\n          title=\"News\"\n          >{{ config.system.news.unread }}</strong\n        >\n        <strong\n          v-if=\"config !== null && config.main.logs.numWarnings > 0\"\n          class=\"notif warnings\"\n          title=\"Warning\"\n          >{{ config.main.logs.numWarnings }}</strong\n        >\n        <strong\n          v-if=\"config !== null && config.main.logs.numErrors > 0\"\n          class=\"notif errors\"\n          title=\"Error\"\n          >{{ config.main.logs.numErrors }}</strong\n        >\n        <strong\n          v-if=\"serverError\"\n          class=\"notif errors\"\n          title=\"Connection error to Medusa API, check url and apikey in config.yml\"\n          >?</strong\n        >\n      </div>\n    </template>\n  </Generic>\n</template>\n\n<script>\nimport service from \"@/mixins/service.js\";\nimport Generic from \"./Generic.vue\";\n\nexport default {\n  name: \"Medusa\",\n  mixins: [service],\n  props: {\n    item: Object,\n  },\n  components: {\n    Generic,\n  },\n  data: () => {\n    return {\n      config: null,\n      serverError: false,\n    };\n  },\n  created: function () {\n    this.fetchConfig();\n  },\n  methods: {\n    fetchConfig: function () {\n      this.fetch(\"/api/v2/config\", {\n        headers: { \"X-Api-Key\": this.item.apikey },\n      })\n        .then((conf) => {\n          this.config = conf;\n        })\n        .catch((e) => {\n          console.log(e);\n          this.serverError = true;\n        });\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.notifs {\n  position: absolute;\n  color: white;\n  font-family: sans-serif;\n  top: 0.3em;\n  right: 0.5em;\n  .notif {\n    padding-right: 0.35em;\n    padding-left: 0.35em;\n    padding-top: 0.2em;\n    padding-bottom: 0.2em;\n    border-radius: 0.25em;\n    position: relative;\n    margin-left: 0.3em;\n    font-size: 0.8em;\n    &.news {\n      background-color: #777777;\n    }\n\n    &.warnings {\n      background-color: #d08d2e;\n    }\n\n    &.errors {\n      background-color: #e51111;\n    }\n  }\n}\n</style>\n"]}]}