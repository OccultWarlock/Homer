{"remainingRequest":"/home/pi/homer/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pi/homer/src/components/Message.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/pi/homer/src/components/Message.vue","mtime":1654015932568},{"path":"/home/pi/homer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/pi/homer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiTWVzc2FnZSIsCiAgcHJvcHM6IHsKICAgIGl0ZW06IE9iamVjdCwKICB9LAogIGRhdGE6IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiB7CiAgICAgIG1lc3NhZ2U6IHt9LAogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGFzeW5jIGZ1bmN0aW9uICgpIHsKICAgIC8vIExvb2sgZm9yIGEgbmV3IG1lc3NhZ2UgaWYgYW4gZW5kcG9pbnQgaXMgcHJvdmlkZWQuCiAgICB0aGlzLm1lc3NhZ2UgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLml0ZW0pOwogICAgYXdhaXQgdGhpcy5nZXRNZXNzYWdlKCk7CiAgfSwKICBjb21wdXRlZDogewogICAgc2hvdzogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gdGhpcy5tZXNzYWdlLnRpdGxlIHx8IHRoaXMubWVzc2FnZS5jb250ZW50OwogICAgfSwKICB9LAogIHdhdGNoOiB7CiAgICBpdGVtOiBmdW5jdGlvbiAoaXRlbSkgewogICAgICB0aGlzLm1lc3NhZ2UgPSBPYmplY3QuYXNzaWduKHt9LCBpdGVtKTsKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRNZXNzYWdlOiBhc3luYyBmdW5jdGlvbiAoKSB7CiAgICAgIGlmICghdGhpcy5pdGVtKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIGlmICh0aGlzLml0ZW0udXJsKSB7CiAgICAgICAgbGV0IGZldGNoZWRNZXNzYWdlID0gYXdhaXQgdGhpcy5kb3dubG9hZE1lc3NhZ2UodGhpcy5pdGVtLnVybCk7CiAgICAgICAgY29uc29sZS5sb2coImRvbmUiKTsKICAgICAgICBpZiAodGhpcy5pdGVtLm1hcHBpbmcpIHsKICAgICAgICAgIGZldGNoZWRNZXNzYWdlID0gdGhpcy5tYXBSZW1vdGVNZXNzYWdlKGZldGNoZWRNZXNzYWdlKTsKICAgICAgICB9CgogICAgICAgIC8vIGtlZXAgdGhlIG9yaWdpbmFsIGNvbmZpZyB2YWx1ZSBpZiBubyB2YWx1ZSBpcyBwcm92aWRlZCBieSB0aGUgZW5kcG9pbnQKICAgICAgICBjb25zdCBtZXNzYWdlID0gdGhpcy5tZXNzYWdlOwogICAgICAgIGZvciAoY29uc3QgcHJvcCBvZiBbInRpdGxlIiwgInN0eWxlIiwgImNvbnRlbnQiLCAiaWNvbiJdKSB7CiAgICAgICAgICBpZiAocHJvcCBpbiBmZXRjaGVkTWVzc2FnZSAmJiBmZXRjaGVkTWVzc2FnZVtwcm9wXSAhPT0gbnVsbCkgewogICAgICAgICAgICBtZXNzYWdlW3Byb3BdID0gZmV0Y2hlZE1lc3NhZ2VbcHJvcF07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHRoaXMubWVzc2FnZSA9IHsgLi4ubWVzc2FnZSB9OyAvLyBGb3JjZSBjb21wdXRlZCBwcm9wZXJ0eSB0byByZS1ldmFsdWF0ZQogICAgICB9CgogICAgICBpZiAodGhpcy5pdGVtLnJlZnJlc2hJbnRlcnZhbCkgewogICAgICAgIHNldFRpbWVvdXQodGhpcy5nZXRNZXNzYWdlLCB0aGlzLml0ZW0ucmVmcmVzaEludGVydmFsKTsKICAgICAgfQogICAgfSwKCiAgICBkb3dubG9hZE1lc3NhZ2U6IGZ1bmN0aW9uICh1cmwpIHsKICAgICAgcmV0dXJuIGZldGNoKHVybCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzICE9IDIwMCkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwogICAgICB9KTsKICAgIH0sCgogICAgbWFwUmVtb3RlTWVzc2FnZTogZnVuY3Rpb24gKG1lc3NhZ2UpIHsKICAgICAgbGV0IG1hcHBlZCA9IHt9OwogICAgICAvLyBtYXAgcHJvcGVydHkgZnJvbSBtZXNzYWdlIGludG8gbWFwcGVkIGFjY29yZGluZyB0byBtYXBwaW5nIGNvbmZpZyAob25seSBpZiBmaWVsZCBoYXMgYSB2YWx1ZSk6CiAgICAgIGZvciAoY29uc3QgcHJvcCBpbiB0aGlzLml0ZW0ubWFwcGluZykKICAgICAgICBpZiAobWVzc2FnZVt0aGlzLml0ZW0ubWFwcGluZ1twcm9wXV0pCiAgICAgICAgICBtYXBwZWRbcHJvcF0gPSBtZXNzYWdlW3RoaXMuaXRlbS5tYXBwaW5nW3Byb3BdXTsKICAgICAgcmV0dXJuIG1hcHBlZDsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["Message.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Message.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <article v-if=\"show\" class=\"message\" :class=\"message.style\">\n    <div v-if=\"message.title || message.icon\" class=\"message-header\">\n      <p>\n        <i v-if=\"message.icon\" :class=\"`fa-fw ${message.icon}`\"></i>\n        {{ message.title }}\n      </p>\n    </div>\n    <div\n      v-if=\"message.content\"\n      class=\"message-body\"\n      v-html=\"message.content\"\n    ></div>\n  </article>\n</template>\n\n<script>\nexport default {\n  name: \"Message\",\n  props: {\n    item: Object,\n  },\n  data: function () {\n    return {\n      message: {},\n    };\n  },\n  created: async function () {\n    // Look for a new message if an endpoint is provided.\n    this.message = Object.assign({}, this.item);\n    await this.getMessage();\n  },\n  computed: {\n    show: function () {\n      return this.message.title || this.message.content;\n    },\n  },\n  watch: {\n    item: function (item) {\n      this.message = Object.assign({}, item);\n    },\n  },\n  methods: {\n    getMessage: async function () {\n      if (!this.item) {\n        return;\n      }\n      if (this.item.url) {\n        let fetchedMessage = await this.downloadMessage(this.item.url);\n        console.log(\"done\");\n        if (this.item.mapping) {\n          fetchedMessage = this.mapRemoteMessage(fetchedMessage);\n        }\n\n        // keep the original config value if no value is provided by the endpoint\n        const message = this.message;\n        for (const prop of [\"title\", \"style\", \"content\", \"icon\"]) {\n          if (prop in fetchedMessage && fetchedMessage[prop] !== null) {\n            message[prop] = fetchedMessage[prop];\n          }\n        }\n        this.message = { ...message }; // Force computed property to re-evaluate\n      }\n\n      if (this.item.refreshInterval) {\n        setTimeout(this.getMessage, this.item.refreshInterval);\n      }\n    },\n\n    downloadMessage: function (url) {\n      return fetch(url).then(function (response) {\n        if (response.status != 200) {\n          return;\n        }\n        return response.json();\n      });\n    },\n\n    mapRemoteMessage: function (message) {\n      let mapped = {};\n      // map property from message into mapped according to mapping config (only if field has a value):\n      for (const prop in this.item.mapping)\n        if (message[this.item.mapping[prop]])\n          mapped[prop] = message[this.item.mapping[prop]];\n      return mapped;\n    },\n  },\n};\n</script>\n"]}]}