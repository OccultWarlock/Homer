{"remainingRequest":"/home/pi/homer/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pi/homer/src/components/services/Prowlarr.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/pi/homer/src/components/services/Prowlarr.vue","mtime":1654015932568},{"path":"/home/pi/homer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/pi/homer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBzZXJ2aWNlIGZyb20gIkAvbWl4aW5zL3NlcnZpY2UuanMiOwppbXBvcnQgR2VuZXJpYyBmcm9tICIuL0dlbmVyaWMudnVlIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUHJvd2xhcnIiLAogIG1peGluczogW3NlcnZpY2VdLAogIHByb3BzOiB7CiAgICBpdGVtOiBPYmplY3QsCiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBHZW5lcmljLAogIH0sCiAgZGF0YTogKCkgPT4gewogICAgcmV0dXJuIHsKICAgICAgd2FybmluZ3M6IG51bGwsCiAgICAgIGVycm9yczogbnVsbCwKICAgICAgc2VydmVyRXJyb3I6IGZhbHNlLAogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIHRoaXMuZmV0Y2hDb25maWcoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZldGNoQ29uZmlnOiBmdW5jdGlvbiAoKSB7CiAgICAgIHRoaXMuZmV0Y2goYC9hcGkvdjEvaGVhbHRoP2FwaWtleT0ke3RoaXMuaXRlbS5hcGlrZXl9YCkKICAgICAgICAudGhlbigoaGVhbHRoKSA9PiB7CiAgICAgICAgICB0aGlzLndhcm5pbmdzID0gMDsKICAgICAgICAgIHRoaXMuZXJyb3JzID0gMDsKICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaGVhbHRoLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIGlmIChoZWFsdGhbaV0udHlwZSA9PSAid2FybmluZyIpIHsKICAgICAgICAgICAgICB0aGlzLndhcm5pbmdzKys7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaGVhbHRoW2ldLnR5cGUgPT0gImVycm9yIikgewogICAgICAgICAgICAgIHRoaXMuZXJyb3JzKys7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoZSkgPT4gewogICAgICAgICAgY29uc29sZS5lcnJvcihlKTsKICAgICAgICAgIHRoaXMuc2VydmVyRXJyb3IgPSB0cnVlOwogICAgICAgIH0pOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["Prowlarr.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Prowlarr.vue","sourceRoot":"src/components/services","sourcesContent":["<template>\n  <Generic :item=\"item\">\n    <template #indicator>\n      <div class=\"notifs\">\n        <strong v-if=\"warnings > 0\" class=\"notif warnings\" title=\"Warning\">\n          {{ warnings }}\n        </strong>\n        <strong v-if=\"errors > 0\" class=\"notif errors\" title=\"Error\">\n          {{ errors }}\n        </strong>\n        <strong\n          v-if=\"serverError\"\n          class=\"notif errors\"\n          title=\"Connection error to Prowlarr API, check url and apikey in config.yml\"\n        >\n          ?\n        </strong>\n      </div>\n    </template>\n  </Generic>\n</template>\n\n<script>\nimport service from \"@/mixins/service.js\";\nimport Generic from \"./Generic.vue\";\n\nexport default {\n  name: \"Prowlarr\",\n  mixins: [service],\n  props: {\n    item: Object,\n  },\n  components: {\n    Generic,\n  },\n  data: () => {\n    return {\n      warnings: null,\n      errors: null,\n      serverError: false,\n    };\n  },\n  created: function () {\n    this.fetchConfig();\n  },\n  methods: {\n    fetchConfig: function () {\n      this.fetch(`/api/v1/health?apikey=${this.item.apikey}`)\n        .then((health) => {\n          this.warnings = 0;\n          this.errors = 0;\n          for (var i = 0; i < health.length; i++) {\n            if (health[i].type == \"warning\") {\n              this.warnings++;\n            } else if (health[i].type == \"error\") {\n              this.errors++;\n            }\n          }\n        })\n        .catch((e) => {\n          console.error(e);\n          this.serverError = true;\n        });\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.notifs {\n  position: absolute;\n  color: white;\n  font-family: sans-serif;\n  top: 0.3em;\n  right: 0.5em;\n\n  .notif {\n    display: inline-block;\n    padding: 0.2em 0.35em;\n    border-radius: 0.25em;\n    position: relative;\n    margin-left: 0.3em;\n    font-size: 0.8em;\n\n    &.warnings {\n      background-color: #d08d2e;\n    }\n\n    &.errors {\n      background-color: #e51111;\n    }\n  }\n}\n</style>\n"]}]}