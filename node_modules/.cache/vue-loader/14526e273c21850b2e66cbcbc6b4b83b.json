{"remainingRequest":"/home/pi/homer/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pi/homer/src/components/DynamicTheme.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/pi/homer/src/components/DynamicTheme.vue","mtime":1654015932568},{"path":"/home/pi/homer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/pi/homer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRHluYW1pY1RoZW1lIiwKICBwcm9wczogewogICAgdGhlbWVzOiBPYmplY3QsCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRWYXJzOiBmdW5jdGlvbiAodGhlbWUpIHsKICAgICAgbGV0IHZhcnMgPSBbXTsKICAgICAgZm9yIChjb25zdCB0aGVtZVZhcnMgaW4gdGhlbWUpIHsKICAgICAgICBsZXQgdmFsdWUgPSBgJHt0aGVtZVt0aGVtZVZhcnNdfWA7CiAgICAgICAgaWYgKCF2YWx1ZSkgewogICAgICAgICAgdmFsdWUgPSAiaW5pdGlhbCI7CiAgICAgICAgfSBlbHNlIGlmICh0aGVtZVZhcnMgPT0gImJhY2tncm91bmQtaW1hZ2UiKSB7CiAgICAgICAgICB2YWx1ZSA9IGB1cmwoJHt0aGVtZVt0aGVtZVZhcnNdfSlgOwogICAgICAgIH0KICAgICAgICB2YXJzLnB1c2goYC0tJHt0aGVtZVZhcnN9OiAke3ZhbHVlfWApOwogICAgICB9CiAgICAgIHJldHVybiB2YXJzLmpvaW4oIjsiKTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["DynamicTheme.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DynamicTheme.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <DynamicStyle>\n    :root, body #app.is-light {\n    {{ getVars(themes.light) }}\n    } @media (prefers-color-scheme: light), (prefers-color-scheme:\n    no-preference) { :root, body #app {\n    {{ getVars(themes.light) }}\n    } } body #app.is-dark {\n    {{ getVars(themes.dark) }}\n    } @media (prefers-color-scheme: dark) { :root, body #app {\n    {{ getVars(themes.dark) }}\n    } }\n  </DynamicStyle>\n</template>\n\n<script>\nexport default {\n  name: \"DynamicTheme\",\n  props: {\n    themes: Object,\n  },\n  methods: {\n    getVars: function (theme) {\n      let vars = [];\n      for (const themeVars in theme) {\n        let value = `${theme[themeVars]}`;\n        if (!value) {\n          value = \"initial\";\n        } else if (themeVars == \"background-image\") {\n          value = `url(${theme[themeVars]})`;\n        }\n        vars.push(`--${themeVars}: ${value}`);\n      }\n      return vars.join(\";\");\n    },\n  },\n};\n</script>\n"]}]}