{"remainingRequest":"/home/pi/homer/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pi/homer/src/components/SettingToggle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/pi/homer/src/components/SettingToggle.vue","mtime":1654015932568},{"path":"/home/pi/homer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/pi/homer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/homer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU2V0dGluZ1RvZ2dsZSIsCiAgcHJvcHM6IHsKICAgIG5hbWU6IFN0cmluZywKICAgIGljb246IFN0cmluZywKICAgIGljb25BbHQ6IFN0cmluZywKICAgIGRlZmF1bHRWYWx1ZTogQm9vbGVhbiwKICB9LAogIGRhdGE6IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlY29uZGFyeUljb246IG51bGwsCiAgICAgIHZhbHVlOiB0cnVlLAogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIHRoaXMuc2Vjb25kYXJ5SWNvbiA9IHRoaXMuaWNvbkFsdCB8fCB0aGlzLmljb247CgogICAgaWYgKHRoaXMubmFtZSBpbiBsb2NhbFN0b3JhZ2UpIHsKICAgICAgdGhpcy52YWx1ZSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlW3RoaXMubmFtZV0pOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy52YWx1ZSA9IHRoaXMuZGVmYXVsdFZhbHVlOwogICAgfQoKICAgIHRoaXMuJGVtaXQoInVwZGF0ZWQiLCB0aGlzLnZhbHVlKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHRvZ2dsZVNldHRpbmc6IGZ1bmN0aW9uICgpIHsKICAgICAgdGhpcy52YWx1ZSA9ICF0aGlzLnZhbHVlOwogICAgICBsb2NhbFN0b3JhZ2VbdGhpcy5uYW1lXSA9IHRoaXMudmFsdWU7CiAgICAgIHRoaXMuJGVtaXQoInVwZGF0ZWQiLCB0aGlzLnZhbHVlKTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["SettingToggle.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SettingToggle.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <a v-on:click=\"toggleSetting()\" class=\"navbar-item is-inline-block-mobile\">\n    <span><i :class=\"['fas', 'fa-fw', value ? icon : secondaryIcon]\"></i></span>\n    <slot></slot>\n  </a>\n</template>\n\n<script>\nexport default {\n  name: \"SettingToggle\",\n  props: {\n    name: String,\n    icon: String,\n    iconAlt: String,\n    defaultValue: Boolean,\n  },\n  data: function () {\n    return {\n      secondaryIcon: null,\n      value: true,\n    };\n  },\n  created: function () {\n    this.secondaryIcon = this.iconAlt || this.icon;\n\n    if (this.name in localStorage) {\n      this.value = JSON.parse(localStorage[this.name]);\n    } else {\n      this.value = this.defaultValue;\n    }\n\n    this.$emit(\"updated\", this.value);\n  },\n  methods: {\n    toggleSetting: function () {\n      this.value = !this.value;\n      localStorage[this.name] = this.value;\n      this.$emit(\"updated\", this.value);\n    },\n  },\n};\n</script>\n"]}]}